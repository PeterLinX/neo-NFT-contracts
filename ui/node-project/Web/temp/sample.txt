@using ClientDependency.Core.Mvc
@using Infragistics.Web.Umbraco.Extensions
@using Infragistics.Web.Umbraco.Extensions.Mvc
@using Umbraco.Core.Models
@using Umbraco.Web

@inherits Umbraco.Web.Macros.PartialViewMacroPage
@{
    int showArrows;
    if (!int.TryParse((string)Model.MacroParameters["showArrows"], out showArrows))
    {
        showArrows = 1;
    }

    int showBullets;
    if (!int.TryParse((string)Model.MacroParameters["showBullets"], out showBullets))
    {
        showBullets = 1;
    }

    int width;
    if (!int.TryParse((string)Model.MacroParameters["width"], out width))
    {
        // 964px is the default content width on the pages.
        width = 964;
    }
    int height;
    if (!int.TryParse((string)Model.MacroParameters["height"], out height))
    {
        height = 300;
    }

    Html.RequiresJs("~/assets/libs/jquery.royalslider.min.js");
    Html.RequiresCss("~/assets/libs/royalslider/royalslider.css");

    string script = string.Format(
@"jQuery(document).ready(function ($) {{
    $('.royalSlider').royalSlider({{
        controlNavigation: {0},
        keyboardNavEnabled: true,
        arrowsNav: {1},
        arrowsNavAutoHide: true,
        controlsInside: true,
        navigateByClick: false,
        loop: true,
        autoPlay: {{
            enabled: true,
            pauseOnHover: true,
            delay: 3000,
            stopAtAction: false
        }}
    }});
}});", 
     showBullets == 1 ? "'bullets'" : "'none'",
     showArrows == 1 ? "true" : "false");
    
    Html.RegisterScriptBlock("royalSlider", script);

    int parentId;
    if (!int.TryParse((string)Model.MacroParameters["imagesFolder"], out parentId))
    {
        parentId = Model.Content.Id;
    }
    IEnumerable<IPublishedContent> nodes = Umbraco.TypedContent(parentId).Children;
}

<div class="royalSlider rsDefault" style="width: @(width)px; height: @(height)px;">
    @foreach (var content in nodes)
    {
        <div>
            @Html.Raw(content.GetPropertyValue<string>(DocumentTypes.GenericProperties.Content))
        </div>
    }
</div>